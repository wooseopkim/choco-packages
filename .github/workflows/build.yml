on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: windows-latest
    outputs:
      matrix: ${{ steps.output.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: output
        run: |
          $targets = (Import-PowerShellDataFile (Join-Path '.' 'Build.psd1')).Targets
          $matrix = .\.github\workflows\scripts\ConvertTo-Matrix.ps1 -Targets $targets
          Write-Output "matrix=$matrix" >> $env:GITHUB_OUTPUT
  build:
    needs: [setup]
    runs-on: windows-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    outputs:
      uploaded: ${{ steps.upload.outputs.artifact-id == true }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          global-json-file: ./global.json

      - run: .\install.ps1
      - run: .\load.ps1
      - run: .\test.ps1
      - run: .\build.ps1 -Target "$env:ID"
        env:
          ID: ${{ matrix.id }}

      - id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.id }}
          path: ./release/*.nupkg
  check:
    needs: [setup, build]
    if: needs.build.outputs.uploaded
    runs-on: windows-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.id }}

      - uses: actions/cache@v4
        with:
          path: .choco-cache
          key: ${{ matrix.id }}-choco-${{ hashFiles('./*.nupkg') }}
      - run: choco install "$env:ID" --source=. -y --failonstderr --cache="$env:CACHE"
        env:
          ID: ${{ matrix.id }}
          CACHE: .choco-cache
      - run: |
          $commands = ConvertFrom-Json "$env:COMMAND_LIST"
          .\.github\workflows\scripts\Test-ChocoCommand.ps1 -Commands $commands
        env:
          COMMAND_LIST: ${{ matrix.commands }}

      - run: choco uninstall "$env:ID" -y --failonstderr
        env:
          ID: ${{ matrix.id }}
      - run: |
          $commands = ConvertFrom-Json "$env:COMMAND_LIST"
          .\.github\workflows\scripts\Test-ChocoCommand.ps1 -NotCallable -Commands $commands
        env:
          COMMAND_LIST: ${{ matrix.commands }}
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [setup, check]
    runs-on: windows-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.id }}
      - run: choco push .\*.nupkg --apikey "$env:CHOCO_API_KEY" -y -failonstderr
        env:
          CHOCO_API_KEY: ${{ secrets.CHOCO_API_KEY }}
